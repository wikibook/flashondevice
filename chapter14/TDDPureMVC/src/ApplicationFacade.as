/* Copyright (c) 2008 Company name, All Rights Reserved  @author   Elad Elrom @contact  elad.ny at gmail.com @project  project @internal  */package{	    import com.elad.TDDPureMVC.controller.*;    import com.elad.TDDPureMVC.controller.services.*;        import org.puremvc.as3.interfaces.IFacade;    import org.puremvc.as3.patterns.facade.Facade;        public class ApplicationFacade extends Facade implements IFacade     {        //todo: set names constants of the application        public static const STARTUP:String = "startup";
        public static const READ_ADOBE_FEEDS:String = "readAdobeFeeds";		        /**		 *		 * Defines the commands with the controller		 * <code>initializeController</code> all commands will 		 * be placed in this method.		 *		 * @param inner class instance which restricts constructor access		 *		 */        override protected function initializeController():void         {            super.initializeController();                           //todo: add commands
            registerCommand(READ_ADOBE_FEEDS, ReadAdobeFeedsCommand);            registerCommand(STARTUP, StartupCommand);        }        /**		 *		 * Broadcast the startup notification using		 * <code>sendNotification</code>.		 *		 * @param object to pass to the <code>sendNotification</code>.		 *		 */		public function startup(app:Object):void 		{			sendNotification( STARTUP, app );		}		        		public static function getInstance():ApplicationFacade 		{			if (instance == null) instance = new ApplicationFacade();			return instance as ApplicationFacade;		}            }}
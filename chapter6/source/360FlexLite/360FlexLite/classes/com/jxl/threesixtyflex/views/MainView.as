import com.jxl.shuriken.core.UIComponent;import com.jxl.shuriken.controls.LinkButton;import com.jxl.shuriken.events.ShurikenEvent;import com.jxl.shuriken.events.Event;import com.jxl.shuriken.events.Callback;class com.jxl.threesixtyflex.views.MainView extends UIComponent{	public static var SYMBOL_NAME:String 		= "com.jxl.threesixtyflex.views.MainView";		public static var EVENT_MON:String 			= "mon";	public static var EVENT_TUE:String 			= "tue";	public static var EVENT_WED:String 			= "wed";	public static var EVENT_SETTINGS:String 	= "settings";		private var __logo_mc:MovieClip;	private var __title_txt:TextField;	private var __copy_txt:TextField;	private var __mon_lb:LinkButton;	private var __tue_lb:LinkButton;	private var __wed_lb:LinkButton;	private var __or_txt:TextField;	private var __settings_lb:LinkButton;		private var __todayCallback:Callback;	private var __settingsCallback:Callback;		public function MainView()	{	}		public function onLoad():Void	{		var date:Date = new Date();		var day:Number = date.getDate();		switch(day)		{			case 5:				Selection.setFocus(__mon_lb);				break;							case 6:				Selection.setFocus(__tue_lb);				break;						case 7:				Selection.setFocus(__wed_lb);				break;						default:				Selection.setFocus(__mon_lb);				break;		}				__copy_txt.setTextFormat(_global.pixelTF);		__copy_txt.setNewTextFormat(_global.pixelTF);	}		private function createChildren():Void	{		super.createChildren();				if(__logo_mc == null)		{			__logo_mc = attachMovie("Logo", "__logo_mc", getNextHighestDepth());		}				if(__title_txt == null)		{			__title_txt = createLabel("__title_txt");			var titleTF:TextFormat = __title_txt.getTextFormat();			titleTF.size = 8;			titleTF.font = "kroeger 0853";			__title_txt.embedFonts = true;			__title_txt.setNewTextFormat(titleTF);			__title_txt.text = "Flash Lite 2 Schedule View";		}				if(__mon_lb == null)		{			__mon_lb = LinkButton(createComponent(LinkButton, "__mon_lb"));			__mon_lb.setReleaseCallback(this, onMon);			__mon_lb.label = "Monday";		}				if(__tue_lb == null)		{			__tue_lb = LinkButton(createComponent(LinkButton, "__tue_lb"));			__tue_lb.setReleaseCallback(this, onTue);			__tue_lb.label = "Tuesday";		}				if(__wed_lb == null)		{			__wed_lb = LinkButton(createComponent(LinkButton, "__wed_lb"));			__wed_lb.setReleaseCallback(this, onWed);			__wed_lb.label = "Wednesday";		}				if(__or_txt == null)		{			__or_txt = createLabel("__or_txt");			__or_txt.text = "or";		}				if(__settings_lb == null)		{			__settings_lb = LinkButton(createComponent(LinkButton, "__settings_lb"));			__settings_lb.setReleaseCallback(this, onSettings);			__settings_lb.label = "change your settings";		}				if(__copy_txt == null)		{			__copy_txt = createLabel("__copy_txt");//			var cTF:TextFormat = __copy_txt.getTextFormat();//			cTF.size = 8;//			cTF.font = "kroeger 0853";			__copy_txt.embedFonts = true;			__copy_txt.setNewTextFormat(_global.pixelTF);			__copy_txt.text = "created by jesse warden";		}	}		private function redraw():Void	{		super.redraw();				__logo_mc._x = 22;		__logo_mc._y = 22;				__title_txt.move(__logo_mc._x, __logo_mc._y + __logo_mc._height);		__title_txt.setSize(__width, __title_txt._height);				__mon_lb.autoSetSize();		__mon_lb.move(__title_txt._x, __title_txt._y + __title_txt._height + 4);				__tue_lb.autoSetSize();		__tue_lb.move(__mon_lb.x, __mon_lb.y + __mon_lb.height + 2);				__wed_lb.autoSetSize();		__wed_lb.move(__tue_lb.x, __tue_lb.y + __tue_lb.height + 2);				__or_txt.move(__wed_lb.x, __wed_lb.y + __wed_lb.height + 8);		__or_txt.setSize(__or_txt.textWidth + 4, __or_txt._height);				__settings_lb.autoSetSize();		__settings_lb.move(__or_txt._x + __or_txt._width, __or_txt._y);				__copy_txt.setSize(__copy_txt.textWidth + 4, __copy_txt.textHeight + 4);		__copy_txt.move(__or_txt._x, __or_txt._y + __or_txt._height + 22);	}		private function onMon(event:ShurikenEvent):Void	{		trace("------------------");		trace("MainView::onMon");		__todayCallback.dispatch(new Event(EVENT_MON, this));	}		private function onTue(event:ShurikenEvent):Void	{		trace("------------------");		trace("MainView::onTue");		__todayCallback.dispatch(new Event(EVENT_TUE, this));	}		private function onWed(event:ShurikenEvent):Void	{		trace("------------------");		trace("MainView::onWed");		__todayCallback.dispatch(new Event(EVENT_WED, this));	}		private function onSettings(event:ShurikenEvent):Void	{		__settingsCallback.dispatch(new Event(EVENT_SETTINGS, this));	}		public function setDayCallback(scope:Object, func:Function):Void	{		__todayCallback = new Callback(scope, func);	}		public function setSettingsCallback(scope:Object, func:Function):Void	{		__settingsCallback = new Callback(scope, func);	}	}
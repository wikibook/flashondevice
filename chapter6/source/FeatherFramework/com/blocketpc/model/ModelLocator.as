/** * This class save and recover data. The data it's saved in an internal object creating properties dynamically. * The recovered data maintains their original type. *  * @see AbstractManager * @see AbstractView * @see TweenLite *  */class com.blocketpc.model.ModelLocator{	/*	 * object to store the data	 */	private var _data_obj:Object;	private static var _instance:ModelLocator = undefined;		/**	 * Constructor.	 */	private function ModelLocator()	{		_data_obj = new Object();	}		/**	 * Singleton constructor.	 * 	 * @return A single instance of the ModelLocator class.	 * 	 */	public static function getInstance():ModelLocator	{		if (_instance == undefined)_instance = new ModelLocator();		return _instance;	}		/**	 * Saves data in an internal object creating a property dynamically.	 * 	 * @param flag: String with the data name to save.	 * @param inValue: Data to save as Object.	 * 	 */	public function setData(flag:String, inValue:Object):Void	{		this._data_obj[flag] = inValue;	}		/**	 * Returns data saved.	 * 	 * @param flag: String with the data name to recover.	 * 	 * @return An object with the data.	 * 	 */	public function getData(flag:String):Object	{		return Object(this._data_obj[flag]);	}		/**	 * Deletes data saved.	 * 	 * @param flag: String with the data name to delete 	 * 	 */	public function deleteData(flag:String):Void	{		this._data_obj[flag] = undefined;	}}